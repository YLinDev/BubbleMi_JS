/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/data */ \"./src/scripts/data.js\");\n\nconst loadSound = new Audio('./assets/bubble-pop-6395.mp3');\n(0,_scripts_data__WEBPACK_IMPORTED_MODULE_0__.bubbleUp)();\n\n// async function call(){\n// }\n\n// call();\n\nwindow.reload = function () {\n  d3.selectAll('svg').remove();\n  d3.selectAll('.tooltip').remove();\n  loadSound.play();\n  (0,_scripts_data__WEBPACK_IMPORTED_MODULE_0__.bubbleUp)();\n  d3.selectAll('.direction').remove();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBd0M7QUFHeEMsTUFBTUMsU0FBUyxHQUFHLElBQUlDLEtBQUssQ0FBQyw4QkFBOEIsQ0FBQztBQUMzREYsdURBQVEsRUFBRTs7QUFFVjtBQUNBOztBQUVBOztBQUVBRyxNQUFNLENBQUNDLE1BQU0sR0FBRyxZQUFXO0VBQ3ZCQyxFQUFFLENBQUNDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQ0MsTUFBTSxFQUFFO0VBQzVCRixFQUFFLENBQUNDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQ0MsTUFBTSxFQUFFO0VBQ2pDTixTQUFTLENBQUNPLElBQUksRUFBRTtFQUNoQlIsdURBQVEsRUFBRTtFQUNWSyxFQUFFLENBQUNDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQ0MsTUFBTSxFQUFFO0FBQ3ZDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtidWJibGVVcH0gZnJvbSBcIi4vc2NyaXB0cy9kYXRhXCI7XG5cblxuY29uc3QgbG9hZFNvdW5kID0gbmV3IEF1ZGlvKCcuL2Fzc2V0cy9idWJibGUtcG9wLTYzOTUubXAzJylcbmJ1YmJsZVVwKCk7IFxuXG4vLyBhc3luYyBmdW5jdGlvbiBjYWxsKCl7XG4vLyB9XG5cbi8vIGNhbGwoKTtcblxud2luZG93LnJlbG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIGQzLnNlbGVjdEFsbCgnc3ZnJykucmVtb3ZlKCk7XG4gICAgZDMuc2VsZWN0QWxsKCcudG9vbHRpcCcpLnJlbW92ZSgpO1xuICAgIGxvYWRTb3VuZC5wbGF5KCk7XG4gICAgYnViYmxlVXAoKTtcbiAgICBkMy5zZWxlY3RBbGwoJy5kaXJlY3Rpb24nKS5yZW1vdmUoKTtcbn1cblxuIl0sIm5hbWVzIjpbImJ1YmJsZVVwIiwibG9hZFNvdW5kIiwiQXVkaW8iLCJ3aW5kb3ciLCJyZWxvYWQiLCJkMyIsInNlbGVjdEFsbCIsInJlbW92ZSIsInBsYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bubbleUp\": function() { return /* binding */ bubbleUp; }\n/* harmony export */ });\nfunction bubbleUp() {\n  // set the dimensions and margins of the graph\n  const width = 900;\n  const height = 400;\n\n  // append the svg object to the body of the page\n  const svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"id\", \"chart\").attr(\"viewBox\", \"0 0 900 400\") //dynamic width & height\n  .attr(\"preserveAspectRatio\", \"xMidYMid meet\") //dynamic width & height\n  .style(\"border-radius\", \"5px\");\n\n  // console.log(numCoins.value)\n\n  // Read data\n  d3.json(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${parseInt(numCoins.value)}&page=1&sparkline=false`).then(function (data) {\n    // console.log(element.value)\n    // console.log(data.slice(0, parseInt(element.value)))\n    // data = data.slice(0, parseInt(element.value))\n\n    // add change properties to each coin whether they are up or down based on price_change_percentage_24h\n    data.map(el => {\n      if (Math.abs(el.price_change_percentage_24h) > 100) {\n        el.price_change_percentage_24h = 0;\n      }\n    });\n    data.map(el => {\n      if (Math.abs(el.price_change_percentage_24h) > 100) {\n        el['change'] = 'crazy';\n      } else if (el.price_change_percentage_24h > 0 && el.price_change_percentage_24h < 100) {\n        el['change'] = 'up';\n      } else if (el.price_change_percentage_24h < 0) {\n        el['change'] = 'down';\n      } else if (el.price_change_percentage_24h === null) {\n        el['change'] = 'down';\n        el.price_change_percentage_24h = 0;\n      }\n    });\n    data.map(el => {\n      //convert Market Cap to strings for coininfo\n      if (el.market_cap > 1000000000) {\n        el['toolMC'] = `$${(el.market_cap / 1000000000).toFixed(2)}B`;\n      } else {\n        el['toolMC'] = `$${(el.market_cap / 1000000).toFixed(2)}M`;\n      }\n    });\n    data.map(el => {\n      //convert volume to strings for coininfo\n      if (el.total_volume > 1000000000) {\n        el['toolTV'] = `$${(el.total_volume / 1000000000).toFixed(2)}B`;\n      } else {\n        el['toolTV'] = `$${(el.total_volume / 1000000).toFixed(2)}M`;\n      }\n    });\n    data.map(el => {\n      //convert % change to strings for coininfo\n      if (el.price_change_percentage_24h > 1) {\n        el['toolPC'] = `+${el.price_change_percentage_24h.toFixed(2)}%`;\n      } else {\n        el['toolPC'] = `${el.price_change_percentage_24h.toFixed(2)}%`;\n      }\n    });\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    });\n\n    // console.log(data)\n\n    // data.forEach(el => console.log(el.price_change_percentage_24h))\n\n    let downs = data.filter(el => el.price_change_percentage_24h < 0); // find coins that are down\n    let ups = data.filter(el => el.price_change_percentage_24h > 0); // find coins that are up\n    let crazys = data.filter(el => el.change === 'crazy'); // find coins that are up or down by over 100%\n    // console.log(`${downs.length} downs `)\n    // console.log(`${ups.length} ups `)\n    // console.log(crazys)\n\n    //find the worst performing coin to use for size scaling\n    function bottom(arr) {\n      let result = {\n        price_change_percentage_24h: 0\n      };\n      for (let i = 0; i < arr.length; i++) {\n        if (result.price_change_percentage_24h > arr[i].price_change_percentage_24h && arr[i].change !== 'crazy') {\n          result = arr[i];\n        }\n      }\n      return result;\n    }\n\n    //find the best performing coin to use for size scaling\n    function top(arr) {\n      let result = {\n        price_change_percentage_24h: 0\n      };\n      for (let i = 0; i < arr.length; i++) {\n        if (result.price_change_percentage_24h < arr[i].price_change_percentage_24h && arr[i].change !== 'crazy') {\n          result = arr[i];\n        }\n      }\n      return result;\n    }\n    function topCrazys(arr) {\n      let result = {\n        price_change_percentage_24h: 0\n      };\n      for (let i = 0; i < arr.length; i++) {\n        if (result.price_change_percentage_24h < Math.abs(arr[i].price_change_percentage_24h)) {\n          result = arr[i];\n        }\n      }\n      return result.price_change_percentage_24h;\n    }\n    function numBelowAvg(arr) {\n      let total = 0;\n      arr.forEach(el => {\n        total += Math.abs(el.price_change_percentage_24h);\n      });\n      let avg = total / numCoins.value;\n      let count = 0;\n      arr.forEach(el => {\n        if (el.price_change_percentage_24h < avg) {\n          count++;\n        }\n      });\n      return total;\n    }\n\n    // console.log(numBelowAvg(data))\n\n    function addSize(num) {\n      if (num < 11) {\n        return [30, 60, 65];\n      } else if (num < 100) {\n        return [25, 40, 50];\n      } else if (num < 150) {\n        return [10, 30, 40];\n      } else {\n        return [7, 30, 40];\n      }\n    }\n    function addFontSize(num) {\n      if (num < 11) {\n        return [13, 25, 30];\n      } else if (num < 100) {\n        return [7.5, 13, 15];\n      } else if (num < 150) {\n        return [5, 10, 13];\n      } else {\n        return [5, 10, 13];\n      }\n    }\n    function addFontAlign(num) {\n      if (num < 11) {\n        return [25, 50, 55];\n      } else if (num < 100) {\n        return [20, 30, 35];\n      } else if (num < 150) {\n        return [7, 25, 30];\n      } else {\n        return [2, 17, 28];\n      }\n    }\n    function sizeScale(arr) {\n      let total = {\n        \"small\": 0,\n        \"big\": 0,\n        \"crazy\": 0\n      };\n      arr.forEach(el => {\n        if (Math.abs(el.price_change_percentage_24h) < 50) {\n          total[\"small\"] += 1;\n        } else if (Math.abs(el.price_change_percentage_24h) > 50 && Math.abs(el.price_change_percentage_24h) < 90) {\n          total[\"big\"] += 1;\n        } else if (Math.abs(el.price_change_percentage_24h) > 80) {\n          total[\"crazy\"] += 1;\n        }\n      });\n      console.log(total);\n      if (total[\"small\"] >= total[\"big\"]) {\n        return 9;\n      } else {\n        return 5;\n      }\n    }\n    // let bubbleSize = sizeScale(data)\n\n    // console.log(sizeScale(data))\n\n    //compare bottom and top and use for size scaling\n    function max() {\n      if (Math.abs(bottom(downs).price_change_percentage_24h) > top(ups).price_change_percentage_24h) {\n        return Math.abs(bottom(downs).price_change_percentage_24h);\n      } else {\n        return top(ups).price_change_percentage_24h;\n      }\n    }\n\n    // console.log(max())\n    // console.log(bottom(downs))\n    // console.log(top(ups))\n\n    // const setA = {\n    //     size: [5, 60],\n    //     textAlign: [5, 50],\n    //     fontSize: [5, 15],\n    //     yCoor: [50, 200]\n    // }\n\n    // Color palette for change up/ down\n    const color = d3.scaleOrdinal().domain([\"down\", \"up\"]) //, \"crazy\"\n    .range([\"#fc0303\", \"#03fc2c\"]); // #046e22 , \"gold\"\n\n    // Size scale for coin/bubbles based on top/worst performing coin\n    const size = d3.scaleLinear().domain([0, max() * 8 / 10, max()]) //use max of up/down to scale bubble size , topCrazys(crazys)\n    .range(addSize(numCoins.value)); // circle will be between 7 and 55 px wide , 80\n\n    const textAlign = d3.scaleLinear().domain([0, max() * 8 / 10, max()]) //use max of up/down to textAlignment px , topCrazys(crazys)\n    .range(addFontAlign(numCoins.value)); // alignment will be between 1 - 45 additional px , 70\n\n    const fontSize = d3.scaleLinear().domain([0, max() * 8 / 10, max()]) //added 10 to make it to appear within desire location , topCrazys(crazys)\n    .range(addFontSize(numCoins.value)); // circle will be between 7 and 55 px wide , 17\n\n    // How to stack bubbles if they are up/down\n    const y = d3.scaleOrdinal().domain([\"up\", \"down\"]).range([50, 200]);\n\n    //-------------------------------------\n    // create a tooltip\n    const Tooltip = d3.select(\"#toolbox\").append(\"ul\").data(data).style(\"opacity\", 0).attr(\"class\", \"tooltip\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\");\n    // .style(\"background-image\", `linear-gradient(${d => color(d.change)}, #474a54)`)\n    // .attr(\"background-color\", d => color(d.change))\n    // .style(\"border-color\", d => color(d.change))\n\n    const Sample = d3.select(\"#toolbox\").append(\"p\").attr(\"class\", \"direction\").html(\"One coin can't win, together they might have a chance.\" + '<br>' + \"This website was created to provide a quick overview of the current crypto market condition using bubbles.  Click bubble for more information and drag to interact with them.\").style(\"text-align\", \"center\");\n    const mySound = new Audio('./assets/pop2.mp3');\n\n    // Three function that change the tooltip when user hover / move / leave a cell\n    const mouseover = function (event, d) {\n      Tooltip.style(\"opacity\", 1);\n      d3.selectAll('.direction').remove();\n    };\n    const mousemove = function (event, d) {\n      Tooltip.html(`&nbsp;&nbsp;&nbsp; Name: ${d.name} &nbsp;&nbsp;&nbsp;\n                    |&nbsp;&nbsp;&nbsp; Current Price: ${formatter.format(d.current_price)} &nbsp;&nbsp;&nbsp;` + '<br>' + `&nbsp;&nbsp;&nbsp;Symbol: ${d.symbol.toUpperCase()} &nbsp;&nbsp;&nbsp; \n                    |&nbsp;&nbsp;&nbsp;24Hr Change: ${d.toolPC} &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                    High 24Hr: ${formatter.format(d['high_24h'])} &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                    Low 24Hr: ${formatter.format(d['low_24h'])}` + '<br>' + `Rank: ${d.market_cap_rank}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` + `Market Cap: ${d.toolMC}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` + `24H Volume: ${d.toolTV}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` + `ATH: ${formatter.format(d.ath)} on ${d.ath_date.slice(0, 10)}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` + `ATL: ${formatter.format(d.atl)} on ${d.atl_date.slice(0, 10)}`).style(\"left\", event.x / 2 + 20 + \"px\").style(\"top\", event.y / 2 - 30 + \"px\");\n      // .attr(\"background-color\", d => color(d.change))\n    };\n\n    const mouseleave = function (event, d) {\n      Tooltip.style(\"opacity\", 0);\n      // .style(\"background-color\", \"black\")\n    };\n\n    const mousedown = function (event, d) {\n      mySound.play();\n    };\n\n    // Initialize the circle: all located at the center of the svg area\n    const node = svg.append(\"g\").selectAll(\"circle\").data(data).join(\"circle\").attr(\"class\", \"node\").attr(\"r\", d => size(Math.abs(d.price_change_percentage_24h))).attr(\"cx\", width / 2).attr(\"cy\", height / 2).style(\"fill\", function (d) {\n      return \"url(#\" + d.name.toLowerCase().replaceAll(\" \", \"-\") + \")\";\n    }).style(\"fill-opacity\", 1).attr(\"stroke\", d => color(d.change)).style(\"stroke-width\", 1.5).on(\"mousedown\", mousedown).on(\"mouseover\", mouseover) // What to do when hovered\n    .on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave).call(d3.drag() // call specific function when circle is dragged\n    .on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n    const text = svg.selectAll(null).data(data).enter().append(\"text\").text(d => {\n      if (d.price_change_percentage_24h < 0) {\n        return `${d.price_change_percentage_24h.toFixed(1)}%`;\n      } else if (d.price_change_percentage_24h > 0) {\n        return `+${d.price_change_percentage_24h.toFixed(1)}%`;\n      } else {\n        return \"0%\";\n      }\n    }).attr('font-size', d => fontSize(Math.abs(d.price_change_percentage_24h))).attr('text-anchor', 'middle');\n    const icon = svg.selectAll(\"coinImage\").data(data).enter().append(\"pattern\").attr(\"class\", \"coinImage\").attr(\"id\", function (d) {\n      return d.name.toLowerCase().replaceAll(\" \", \"-\");\n    }).attr(\"height\", \"100%\").attr(\"width\", \"100%\").attr(\"patternContentUnits\", \"objectBoundingBox\").append(\"image\").attr(\"height\", 1).attr(\"width\", 1).attr(\"preserveAspectRatio\", \"none\").attr(\"xlink:href\", d => d.image);\n    let ticked = () => {\n      node.attr('cx', data => {\n        return data.x;\n      }).attr('cy', data => {\n        return data.y;\n      });\n      text.attr('x', data => {\n        return data.x;\n      }).attr('y', data => {\n        return data.y + textAlign(Math.abs(data.price_change_percentage_24h));\n      });\n    };\n\n    // Features of the forces applied to the nodes:\n    const simulation = d3.forceSimulation().force(\"x\", d3.forceX().strength(.1).x(height / 10)) //strength of bubbles if move horizontally\n    .force(\"y\", d3.forceY().strength(.8).y(d => y(d.change))) //strength of bubbles if move vertically, greens will float on top \n    .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n    .force(\"charge\", d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\n    .force(\"collide\", d3.forceCollide().strength(.2).radius(function (d) {\n      return size(Math.abs(d.price_change_percentage_24h) + 3);\n    }).iterations(5)); // Force that avoids circle overlapping\n\n    // Apply these forces to the nodes and update their positions.\n    // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n    simulation.nodes(data).on(\"tick\", ticked);\n\n    // Drag Logic\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(.03).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(.03);\n      d.fx = null;\n      d.fy = null;\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;