/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/data */ \"./src/scripts/data.js\");\n\n// import Example from \"./scripts/example\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // console.log(\"Hello world!\")\n  // const main = document.getElementById(\"main\")\n  // new Example(main); \n});\nasync function call() {\n  // const json = await coinFetch();\n  const coinInfo = await (0,_scripts_data__WEBPACK_IMPORTED_MODULE_0__.bubbleUp)();\n  // console.log(coinInfo);\n  // console.log(typeof coinInfo);\n}\n\ncall();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBbUQ7QUFDbkQ7O0FBRUFFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRDtFQUNBO0VBQ0E7QUFBQSxDQUVILENBQUM7QUFFRixlQUFlQyxJQUFJQSxDQUFBLEVBQUU7RUFDakI7RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUwsdURBQVEsRUFBRTtFQUNqQztFQUNBO0FBQ0o7O0FBRUFJLElBQUksRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2pzX3Byb2plY3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2J1YmJsZVVwLCBjb2luRmV0Y2h9IGZyb20gXCIuL3NjcmlwdHMvZGF0YVwiO1xuLy8gaW1wb3J0IEV4YW1wbGUgZnJvbSBcIi4vc2NyaXB0cy9leGFtcGxlXCI7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhcIkhlbGxvIHdvcmxkIVwiKVxuICAgIC8vIGNvbnN0IG1haW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1haW5cIilcbiAgICAvLyBuZXcgRXhhbXBsZShtYWluKTsgXG5cbn0pXG5cbmFzeW5jIGZ1bmN0aW9uIGNhbGwoKXtcbiAgICAvLyBjb25zdCBqc29uID0gYXdhaXQgY29pbkZldGNoKCk7XG4gICAgY29uc3QgY29pbkluZm8gPSBhd2FpdCBidWJibGVVcCgpOyBcbiAgICAvLyBjb25zb2xlLmxvZyhjb2luSW5mbyk7XG4gICAgLy8gY29uc29sZS5sb2codHlwZW9mIGNvaW5JbmZvKTtcbn1cblxuY2FsbCgpOyAiXSwibmFtZXMiOlsiYnViYmxlVXAiLCJjb2luRmV0Y2giLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYWxsIiwiY29pbkluZm8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bubbleUp\": function() { return /* binding */ bubbleUp; }\n/* harmony export */ });\nfunction bubbleUp() {\n  // set the dimensions and margins of the graph\n  const width = 960;\n  const height = 450;\n\n  // append the svg object to the body of the page\n  const svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"id\", \"chart\").attr(\"viewBox\", \"0 0 960 450\") //dynamic width & height\n  .attr(\"preserveAspectRatio\", \"xMidYMid meet\"); //dynamic width & height\n\n  // Read data\n  d3.json(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then(function (data) {\n    // add change properties to each coin whether they are up or down based on price_change_percentage_24h\n    data.map(el => {\n      if (el.price_change_percentage_24h > 0) {\n        el['change'] = \"up\";\n      } else {\n        el['change'] = 'down';\n      }\n    });\n\n    //huobi_btc weird data fetch correction\n    data.map(el => {\n      if (el.id === \"huobi-btc\") {\n        el.price_change_percentage_24h = 0;\n      }\n    });\n    console.log(data);\n\n    // data.forEach(el => console.log(el.price_change_percentage_24h))\n\n    let downs = data.filter(el => el.price_change_percentage_24h < 0);\n    let ups = data.filter(el => el.price_change_percentage_24h > 0);\n    console.log(`${downs.length} downs `);\n    console.log(`${ups.length} ups `);\n\n    //find the worst performing coin to use for size scaling\n    function bottom(arr) {\n      let result = {\n        price_change_percentage_24h: 0\n      };\n      for (let i = 0; i < arr.length; i++) {\n        if (result.price_change_percentage_24h > arr[i].price_change_percentage_24h) {\n          result = arr[i];\n        }\n      }\n      return result;\n    }\n\n    //find the best performing coin to use for size scaling\n    function top(arr) {\n      let result = {\n        price_change_percentage_24h: 0\n      };\n      for (let i = 0; i < arr.length; i++) {\n        if (result.price_change_percentage_24h < arr[i].price_change_percentage_24h) {\n          result = arr[i];\n        }\n      }\n      return result;\n    }\n\n    //compare bottom and top and use for size scaling\n    function max() {\n      if (Math.abs(bottom(downs).price_change_percentage_24h) > top(ups).price_change_percentage_24h) {\n        return Math.abs(bottom(downs).price_change_percentage_24h);\n      } else {\n        return top(ups).price_change_percentage_24h;\n      }\n    }\n    console.log(bottom(downs));\n    console.log(top(ups));\n\n    // Color palette for change up/ down\n    const color = d3.scaleOrdinal().domain([\"down\", \"up\"]).range([\"#fc0303\", \"#03fc2c\"]); // #046e22\n\n    // Size scale for coin/bubbles based on top/worst performing coin\n    const size = d3.scaleLinear().domain([0, max()]) //use max of up/down to scale bubble size\n    .range([7, 55]); // circle will be between 7 and 55 px wide\n\n    const textAlign = d3.scaleLinear().domain([0, max()]) //use max of up/down to textAlignment px\n    .range([1, 45]); // alignment will be between 1 - 45 additional px\n\n    const fontSize = d3.scaleLinear().domain([0, max()]) //added 10 to make it to appear within desire location\n    .range([3, 15]); // circle will be between 7 and 55 px wide\n\n    // How to stack bubbles if they are up/down\n    const y = d3.scaleOrdinal().domain([\"up\", \"down\"]).range([0, 100]);\n\n    //-------------------------------------\n    // create a tooltip\n    const Tooltip = d3.select(\"#my_dataviz\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"tooltip\").style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\");\n\n    // Three function that change the tooltip when user hover / move / leave a cell\n    const mouseover = function (event, d) {\n      Tooltip.style(\"opacity\", 1);\n    };\n    const mousemove = function (event, d) {\n      Tooltip.html('<u>' + d.name + '</u>' + \"<br>\" + d.price_change_percentage_24h.toFixed(1) + '%').style(\"left\", event.x / 2 + 20 + \"px\").style(\"top\", event.y / 2 - 30 + \"px\");\n    };\n    const mouseleave = function (event, d) {\n      Tooltip.style(\"opacity\", 0);\n    };\n\n    // Initialize the circle: all located at the center of the svg area\n    const node = svg.append(\"g\").selectAll(\"circle\").data(data).join(\"circle\").attr(\"class\", \"node\").attr(\"r\", d => size(Math.abs(d.price_change_percentage_24h))).attr(\"cx\", width / 2).attr(\"cy\", height / 2).style(\"fill\", function (d) {\n      return \"url(#\" + d.name.toLowerCase().replaceAll(\" \", \"-\") + \")\";\n    }).style(\"fill-opacity\", 1).attr(\"stroke\", d => color(d.change)).style(\"stroke-width\", 2.5).on(\"mouseover\", mouseover) // What to do when hovered\n    .on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave).call(d3.drag() // call specific function when circle is dragged\n    .on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n    const text = svg.selectAll(null).data(data).enter().append(\"text\").text(d => {\n      if (d.price_change_percentage_24h) {\n        return `${d.price_change_percentage_24h.toFixed(1)}%`;\n      } else {\n        return \"0%\";\n      }\n    }).attr('font-size', d => fontSize(Math.abs(d.price_change_percentage_24h))).attr('text-anchor', 'middle');\n    const icon = svg.selectAll(\"coinImage\").data(data).enter().append(\"pattern\").attr(\"class\", \"coinImage\").attr(\"id\", function (d) {\n      return d.name.toLowerCase().replaceAll(\" \", \"-\");\n    }).attr(\"height\", \"100%\").attr(\"width\", \"100%\").attr(\"patternContentUnits\", \"objectBoundingBox\").append(\"image\").attr(\"height\", 1).attr(\"width\", 1).attr(\"preserveAspectRatio\", \"none\").attr(\"xlink:href\", d => d.image);\n    let ticked = () => {\n      node.attr('cx', data => {\n        return data.x;\n      }).attr('cy', data => {\n        return data.y;\n      });\n      text.attr('x', data => {\n        return data.x;\n      }).attr('y', data => {\n        return data.y + textAlign(Math.abs(data.price_change_percentage_24h));\n      });\n    };\n\n    // Features of the forces applied to the nodes:\n    const simulation = d3.forceSimulation().force(\"x\", d3.forceX().strength(0.1).x(height / 2)) //strength of bubbles if move horizontally\n    .force(\"y\", d3.forceY().strength(2).y(d => y(d.change))) //strength of bubbles if move vertically, greens will float on top \n    .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n    .force(\"charge\", d3.forceManyBody().strength(.01)) // Nodes are attracted one each other of value is > 0\n    .force(\"collide\", d3.forceCollide().strength(.2).radius(function (d) {\n      return size(Math.abs(d.price_change_percentage_24h)) + 8;\n    }).iterations(1)); // Force that avoids circle overlapping\n\n    // Apply these forces to the nodes and update their positions.\n    // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n    simulation.nodes(data).on(\"tick\", ticked);\n\n    // What happens when a circle is dragged?\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(.01).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(.01);\n      d.fx = null;\n      d.fy = null;\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;