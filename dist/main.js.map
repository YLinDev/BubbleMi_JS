{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/scripts/data.js","webpack://js_project/./src/index.js"],"sourcesContent":["export function bubbleUp(){\n\n    // set the dimensions and margins of the graph\n    const width = 900\n    const height = 400\n\n    // append the svg object to the body of the page\n    const svg = d3.select(\"#my_dataviz\")\n        .append(\"svg\")\n            .attr(\"id\", \"chart\")\n            .attr(\"viewBox\", \"0 0 900 400\") //dynamic width & height\n            .attr(\"preserveAspectRatio\", \"xMidYMid meet\") //dynamic width & height\n            .style(\"border-radius\", \"5px\")\n\n    // console.log(numCoins.value)\n        \n        // Read data\n        d3.json(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${parseInt(numCoins.value)}&page=1&sparkline=false`).then( function(data) {\n            \n            \n        // console.log(element.value)\n        // console.log(data.slice(0, parseInt(element.value)))\n        // data = data.slice(0, parseInt(element.value))\n\n        // add change properties to each coin whether they are up or down based on price_change_percentage_24h\n        data.map((el) => {\n            if (Math.abs(el.price_change_percentage_24h) > 100) {\n                el.price_change_percentage_24h = 0\n            }\n        })\n\n        data.map((el) => {\n            if (Math.abs(el.price_change_percentage_24h) > 100) {\n                el['change'] = 'crazy'\n            } else if (el.price_change_percentage_24h > 0 && el.price_change_percentage_24h < 100) {\n                el['change'] = 'up'\n            } else if (el.price_change_percentage_24h < 0) {\n                el['change'] = 'down'\n            } else if (el.price_change_percentage_24h === null) {\n                el['change'] = 'down'\n                el.price_change_percentage_24h = 0\n            }\n        })\n\n        data.map((el) => { //convert Market Cap to strings for coininfo\n            if (el.market_cap > 1000000000){\n                el['toolMC'] = `$${(el.market_cap/1000000000).toFixed(2)}B`\n            } else {\n                el['toolMC'] = `$${(el.market_cap/1000000).toFixed(2)}M`\n            }\n        })\n\n        data.map((el) => { //convert volume to strings for coininfo\n            if (el.total_volume > 1000000000){\n                el['toolTV'] = `$${(el.total_volume/1000000000).toFixed(2)}B`\n            } else {\n                el['toolTV'] = `$${(el.total_volume/1000000).toFixed(2)}M`\n            }\n        })\n\n        data.map((el) => { //convert % change to strings for coininfo\n            if (el.price_change_percentage_24h > 1){\n                el['toolPC'] = `+${(el.price_change_percentage_24h).toFixed(2)}%`\n            } else {\n                el['toolPC'] = `${(el.price_change_percentage_24h).toFixed(2)}%`\n            }\n        })\n\n        const formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n        })\n\n        // console.log(data)\n        \n        // data.forEach(el => console.log(el.price_change_percentage_24h))\n\n        let downs = data.filter((el) => el.price_change_percentage_24h < 0) // find coins that are down\n        let ups = data.filter((el) => el.price_change_percentage_24h > 0) // find coins that are up\n        let crazys = data.filter((el) => el.change === 'crazy') // find coins that are up or down by over 100%\n        // console.log(`${downs.length} downs `)\n        // console.log(`${ups.length} ups `)\n        // console.log(crazys)\n\n\n        \n        //find the worst performing coin to use for size scaling\n        function bottom(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h > arr[i].price_change_percentage_24h && arr[i].change !== 'crazy'){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n        \n        //find the best performing coin to use for size scaling\n        function top(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h < arr[i].price_change_percentage_24h && arr[i].change !== 'crazy'){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n\n        function topCrazys(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h < Math.abs(arr[i].price_change_percentage_24h)){\n                    result = arr[i]\n                }\n            }\n            return result.price_change_percentage_24h;\n        }\n        \n        function numBelowAvg(arr) {\n            let total = 0;\n            arr.forEach((el) => {\n                total += Math.abs(el.price_change_percentage_24h)\n            })\n            let avg = total / numCoins.value \n            let count = 0; \n            arr.forEach((el) => {\n                if (el.price_change_percentage_24h < avg) {\n                    count++; \n                }\n            })\n            return total; \n        }\n\n        // console.log(numBelowAvg(data))\n\n        function addSize(num) {\n            if(num < 11){\n                return [30, 60, 65];\n            } else if(num < 100) {\n                return [25, 40, 50];\n            } else if (num < 150) {\n                return [10, 30, 40]\n            }else {\n                return [7, 30, 40]; \n            }\n        }\n\n        function addFontSize(num) {\n            if(num < 11){\n                return [13, 25, 30];\n            } else if(num < 100) {\n                return [7.5, 13, 15];\n            } else if (num < 150) {\n                return [5, 10, 13]; \n            } else {\n                return [5, 10, 13]; \n            }\n        }\n\n        function addFontAlign(num) {\n            if(num < 11){\n                return [25, 50, 55];\n            } else if(num < 100) {\n                return [20, 30, 35];\n            } else if (num < 150){\n                return [7, 25, 30]\n            } else {\n                return [2, 17, 28]; \n            }\n        }\n\n        function sizeScale(arr) {\n            let total = {\n                \"small\": 0, \n                \"big\": 0,\n                \"crazy\": 0\n            };\n            arr.forEach((el) => {\n                if (Math.abs(el.price_change_percentage_24h) < 50){\n                    total[\"small\"] += 1; \n                } else if (Math.abs(el.price_change_percentage_24h) > 50 && Math.abs(el.price_change_percentage_24h) < 90){\n                    total[\"big\"] += 1;\n                } else if (Math.abs(el.price_change_percentage_24h) > 80){\n                    total[\"crazy\"] += 1;\n                } \n            })\n            console.log(total)\n            if (total[\"small\"] >= total[\"big\"]) {\n                return 9;\n            } else {\n                return 5; \n            }\n        }\n        // let bubbleSize = sizeScale(data)\n\n        // console.log(sizeScale(data))\n\n        //compare bottom and top and use for size scaling\n        function max(){\n            if (Math.abs(bottom(downs).price_change_percentage_24h) > top(ups).price_change_percentage_24h){\n                return Math.abs(bottom(downs).price_change_percentage_24h);\n            } else {\n                return top(ups).price_change_percentage_24h;\n            }\n        }\n        \n        // console.log(max())\n        // console.log(bottom(downs))\n        // console.log(top(ups))\n        \n        // const setA = {\n        //     size: [5, 60],\n        //     textAlign: [5, 50],\n        //     fontSize: [5, 15],\n        //     yCoor: [50, 200]\n        // }\n\n        // Color palette for change up/ down\n        const color = d3.scaleOrdinal()\n            .domain([\"down\", \"up\"])//, \"crazy\"\n            .range([\"#fc0303\", \"#03fc2c\"]); // #046e22 , \"gold\"\n        \n        // Size scale for coin/bubbles based on top/worst performing coin\n        const size = d3.scaleLinear()\n            .domain([0, max()*8/10, max()]) //use max of up/down to scale bubble size , topCrazys(crazys)\n            .range(addSize(numCoins.value))  // circle will be between 7 and 55 px wide , 80\n        \n        const textAlign = d3.scaleLinear()\n            .domain([0, max()*8/10, max()]) //use max of up/down to textAlignment px , topCrazys(crazys)\n            .range(addFontAlign(numCoins.value))  // alignment will be between 1 - 45 additional px , 70\n\n        const fontSize = d3.scaleLinear()\n            .domain([0, max()*8/10, max()]) //added 10 to make it to appear within desire location , topCrazys(crazys)\n            .range(addFontSize(numCoins.value))  // circle will be between 7 and 55 px wide , 17\n\n        // How to stack bubbles if they are up/down\n        const y = d3.scaleOrdinal()\n            .domain([\"up\", \"down\"])\n            .range([50, 200])\n        \n        //-------------------------------------\n        // create a tooltip\n        const Tooltip = d3.select(\"#toolbox\")\n            .append(\"ul\")\n                .data(data)\n                .style(\"opacity\", 0)\n                .attr(\"class\", \"tooltip\")\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"2px\")\n                .style(\"border-radius\", \"5px\")\n                // .style(\"background-image\", `linear-gradient(${d => color(d.change)}, #474a54)`)\n                // .attr(\"background-color\", d => color(d.change))\n                // .style(\"border-color\", d => color(d.change))\n\n            \n                \n        const Sample = d3.select(\"#toolbox\")\n            .append(\"p\")\n            .attr(\"class\", \"direction\")\n            .html(\"One coin can't win, together they might have a chance.\" + '<br>' + \"This website was created to provide a quick overview of the current crypto market condition using bubbles.  Click bubble for more information and drag to interact with them.\")\n            .style(\"text-align\", \"center\")\n              \n        const mySound = new Audio('./assets/pop2.mp3')\n\n        // Three function that change the tooltip when user hover / move / leave a cell\n        const mouseover = function(event, d) {\n            Tooltip\n                .style(\"opacity\", 1)\n                d3.selectAll('.direction').remove();\n \n        }\n        const mousemove = function(event, d) {\n            Tooltip\n                .html(\n                    `&nbsp;&nbsp;&nbsp; Name: ${d.name} &nbsp;&nbsp;&nbsp;\n                    |&nbsp;&nbsp;&nbsp; Current Price: ${formatter.format(d.current_price)} &nbsp;&nbsp;&nbsp;`+\n                    '<br>' +\n                    `&nbsp;&nbsp;&nbsp;Symbol: ${d.symbol.toUpperCase()} &nbsp;&nbsp;&nbsp; \n                    |&nbsp;&nbsp;&nbsp;24Hr Change: ${d.toolPC} &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                    High 24Hr: ${formatter.format(d['high_24h'])} &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                    Low 24Hr: ${formatter.format(d['low_24h'])}`+ \n                    '<br>' + \n                    `Rank: ${d.market_cap_rank}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `Market Cap: ${d.toolMC}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `24H Volume: ${d.toolTV}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `ATH: ${formatter.format(d.ath)} on ${d.ath_date.slice(0,10)}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `ATL: ${formatter.format(d.atl)} on ${d.atl_date.slice(0,10)}`)\n                .style(\"left\", (event.x/2+20) + \"px\")\n                .style(\"top\", (event.y/2-30) + \"px\")\n                // .attr(\"background-color\", d => color(d.change))\n        }\n        const mouseleave = function(event, d) {\n            Tooltip\n                .style(\"opacity\", 0)\n                // .style(\"background-color\", \"black\")\n        }\n\n        const mousedown = function(event, d) {\n            mySound.play()\n        }\n        \n        // Initialize the circle: all located at the center of the svg area\n        const node = svg.append(\"g\")\n            .selectAll(\"circle\")\n            .data(data)\n            .join(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", d => size(Math.abs(d.price_change_percentage_24h)))\n            .attr(\"cx\", width / 2)\n            .attr(\"cy\", height / 2)\n            .style(\"fill\", function(d) {return \"url(#\" + d.name.toLowerCase().replaceAll(\" \", \"-\") + \")\"})\n            .style(\"fill-opacity\", 1)\n            .attr(\"stroke\", d => color(d.change))\n            .style(\"stroke-width\", 1.5)\n            .on(\"mousedown\", mousedown)\n            .on(\"mouseover\", mouseover) // What to do when hovered\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n            .call(d3.drag() // call specific function when circle is dragged\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended))\n            ;\n        \n        const text = svg.selectAll(null)\n            .data(data)\n            .enter()\n            .append(\"text\")\n            .text(d => {if (d.price_change_percentage_24h < 0) {\n                    return `${d.price_change_percentage_24h.toFixed(1)}%`\n                } else if (d.price_change_percentage_24h > 0) {\n                    return `+${d.price_change_percentage_24h.toFixed(1)}%`\n                } else {\n                    return \"0%\"\n                }\n            })\n            .attr('font-size', d => fontSize(Math.abs(d.price_change_percentage_24h)))\n            .attr('text-anchor', 'middle')\n\n        const icon = svg.selectAll(\"coinImage\")\n            .data(data)\n            .enter()\n            .append(\"pattern\")\n            .attr(\"class\", \"coinImage\")\n            .attr(\"id\", function(d) {return d.name.toLowerCase().replaceAll(\" \", \"-\")})\n            .attr(\"height\", \"100%\")\n            .attr(\"width\", \"100%\")\n            .attr(\"patternContentUnits\", \"objectBoundingBox\")\n            .append(\"image\")\n            .attr(\"height\", 1)\n            .attr(\"width\", 1)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", d => d.image)\n\n            let ticked = () => {\n                node.attr('cx', (data) => {\n                        return data.x\n                    })\n                    .attr('cy', (data) => {\n                        return data.y\n                    });\n            \n                text.attr('x', (data) => {\n                        return data.x\n                    })\n                    .attr('y', (data) => {\n                        return data.y + textAlign(Math.abs(data.price_change_percentage_24h))\n                    });\n            }\n\n        // Features of the forces applied to the nodes:\n        const simulation = d3.forceSimulation()\n            .force(\"x\", d3.forceX().strength(.1).x( height / 10 )) //strength of bubbles if move horizontally\n            .force(\"y\", d3.forceY().strength(.8).y( d => y(d.change) )) //strength of bubbles if move vertically, greens will float on top \n            .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n            .force(\"charge\", d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\n            .force(\"collide\", d3.forceCollide().strength(.2).radius(function(d){ return (size(Math.abs(d.price_change_percentage_24h)+3)) }).iterations(5)) // Force that avoids circle overlapping\n            \n        // Apply these forces to the nodes and update their positions.\n        // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n        simulation\n            .nodes(data)\n                .on(\"tick\", ticked);\n\n        // Drag Logic\n        function dragstarted(event, d) {\n            if (!event.active) simulation.alphaTarget(.03).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        function dragged(event, d) {\n            d.fx = event.x;\n            d.fy = event.y;\n        }\n        function dragended(event, d) {\n            if (!event.active) simulation.alphaTarget(.03);\n            d.fx = null;\n            d.fy = null;\n        }\n\n    })\n}\n\n\n","import {bubbleUp} from \"./scripts/data\";\n\n\nconst loadSound = new Audio('./assets/bubble-pop-6395.mp3')\nbubbleUp(); \n\n// async function call(){\n// }\n\n// call();\n\nwindow.reload = function() {\n    d3.selectAll('svg').remove();\n    d3.selectAll('.tooltip').remove();\n    loadSound.play();\n    bubbleUp();\n    d3.selectAll('.direction').remove();\n}\n\n"],"names":["bubbleUp","svg","d3","select","append","attr","style","json","parseInt","numCoins","value","then","data","map","el","Math","abs","price_change_percentage_24h","market_cap","toFixed","total_volume","formatter","Intl","NumberFormat","currency","downs","filter","ups","bottom","arr","result","i","length","change","top","max","color","scaleOrdinal","domain","range","size","scaleLinear","num","textAlign","addFontAlign","fontSize","addFontSize","y","Tooltip","mySound","html","Audio","node","selectAll","join","d","width","height","name","toLowerCase","replaceAll","on","event","play","remove","format","current_price","symbol","toUpperCase","toolPC","market_cap_rank","toolMC","toolTV","ath","ath_date","slice","atl","atl_date","x","call","drag","active","simulation","alphaTarget","restart","fx","fy","text","enter","image","forceSimulation","force","forceX","strength","forceY","forceCenter","forceManyBody","forceCollide","radius","iterations","nodes","ticked","loadSound","window","reload"],"sourceRoot":""}