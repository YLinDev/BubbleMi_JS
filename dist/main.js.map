{"version":3,"file":"main.js","mappings":"yBAGAA,SAASC,iBAAiB,oBAAoB,SAO9CC,uBCVO,WAGH,MAIMC,EAAMC,GAAGC,OAAO,eACrBC,OAAO,OACHC,KAAK,KAAM,SACXA,KAAK,UAAW,eAChBA,KAAK,sBAAuB,iBAGjCH,GAAGI,KAAK,4HAA4HC,MAAM,SAASC,GAG/IA,EAAKC,KAAKC,IACFA,EAAGC,4BAA8B,EACjCD,EAAW,OAAI,KAEfA,EAAW,OAAI,MACnB,IAGJ,IAAIE,EAAQJ,EAAKK,QAAQH,GAAOA,EAAGC,4BAA8B,IAC7DG,EAAMN,EAAKK,QAAQH,GAAOA,EAAGC,4BAA8B,IAK/D,SAASI,EAAOC,GACZ,IAAIC,EAAS,CAACN,4BAA6B,GAC3C,IAAK,IAAIO,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IACxBD,EAAON,4BAA8BK,EAAIE,GAAGP,8BAC5CM,EAASD,EAAIE,IAGrB,OAAOD,CACX,CAGA,SAASG,EAAIJ,GACT,IAAIC,EAAS,CAACN,4BAA6B,GAC3C,IAAK,IAAIO,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IACxBD,EAAON,4BAA8BK,EAAIE,GAAGP,8BAC5CM,EAASD,EAAIE,IAGrB,OAAOD,CACX,CAvBAI,QAAQC,IAAK,GAAEV,EAAMO,iBACrBE,QAAQC,IAAK,GAAER,EAAIK,eAiCnBE,QAAQC,IAAIP,EAAOH,IACnBS,QAAQC,IAAIF,EAAIN,IAIhB,MAAMS,EAAQrB,GAAGsB,eACZC,OAAO,CAAC,OAAQ,OAChBC,MAAM,CAAC,MAAO,UAGbC,EAAOzB,GAAG0B,cACXH,OAAO,CAAC,EAlBLI,KAAKC,IAAIf,EAAOH,GAAOD,6BAA+BS,EAAIN,GAAKH,4BACxDkB,KAAKC,IAAIf,EAAOH,GAAOD,6BAEvBS,EAAIN,GAAKH,8BAgBnBe,MAAM,CAAC,EAAG,KAETK,EAAI7B,GAAGsB,eACRC,OAAO,CAAC,KAAM,SACdC,MAAM,CAAC,GAAI,MAIVM,EAAU9B,GAAGC,OAAO,eACrBC,OAAO,OACP6B,MAAM,UAAW,GACjB5B,KAAK,QAAS,WACd4B,MAAM,mBAAoB,SAC1BA,MAAM,SAAU,SAChBA,MAAM,eAAgB,OACtBA,MAAM,gBAAiB,OACvBA,MAAM,UAAW,OAmBtB,IAAIC,EAAOjC,EAAIG,OAAO,KACjB+B,UAAU,UACV3B,KAAKA,GACL4B,KAAK,UACL/B,KAAK,QAAS,QACdA,KAAK,KAAKgC,GAAKV,EAAKE,KAAKC,IAAIO,EAAE1B,gCAC/BN,KAAK,KAAMiC,KACXjC,KAAK,KAAMkC,KACXC,KAAK,OACLP,MAAM,QAAQI,GAAKd,EAAMc,EAAEI,UAC3BR,MAAM,eAAgB,IACtB5B,KAAK,SAAU,SACf4B,MAAM,eAAgB,GACtBS,GAAG,aA7BU,SAASC,EAAON,GAC9BL,EACCC,MAAM,UAAW,EACtB,IA2BKS,GAAG,aA1BU,SAASC,EAAON,GAC9BL,EACCQ,KAAK,MAAQH,EAAEO,KAAV,WAAmCP,EAAE1B,4BAA4BkC,QAAQ,GAAK,KACnFZ,MAAM,OAASU,EAAMG,EAAE,EAAE,GAAM,MAC/Bb,MAAM,MAAQU,EAAMZ,EAAE,EAAE,GAAM,KACnC,IAsBKW,GAAG,cArBW,SAASC,EAAON,GAC/BL,EACCC,MAAM,UAAW,EACtB,IAmBKc,KAAK7C,GAAG8C,OACJN,GAAG,SAyBZ,SAAqBC,EAAON,GACnBM,EAAMM,QAAQC,EAAWC,YAAY,KAAKC,UAC/Cf,EAAEgB,GAAKhB,EAAES,EACTT,EAAEiB,GAAKjB,EAAEN,CACb,IA5BSW,GAAG,QA6BZ,SAAiBC,EAAON,GACpBA,EAAEgB,GAAKV,EAAMG,EACbT,EAAEiB,GAAKX,EAAMZ,CACjB,IA/BSW,GAAG,OAgCZ,SAAmBC,EAAON,GACjBM,EAAMM,QAAQC,EAAWC,YAAY,KAC1Cd,EAAEgB,GAAK,KACPhB,EAAEiB,GAAK,IACX,KAjCA,MAAMJ,EAAahD,GAAGqD,kBAGjBC,MAAM,IAAKtD,GAAGuD,SAASC,SAAS,IAAKZ,EAAGP,MACxCiB,MAAM,IAAKtD,GAAGyD,SAASD,SAAS,GAAG3B,GAAGM,GAAKN,EAAEM,EAAEI,WAC/Ce,MAAM,SAAUtD,GAAG0D,cAAcd,EAAER,KAAWP,EAAEQ,MAChDiB,MAAM,SAAUtD,GAAG2D,gBAAgBH,SAAS,KAC5CF,MAAM,UAAWtD,GAAG4D,eAAeJ,SAAS,IAAIK,QAAO,SAAS1B,GAAI,OAAQV,EAAKE,KAAKC,IAAIO,EAAE1B,8BAA8B,CAAG,IAAGqD,WAAW,IAIhJd,EACKe,MAAMzD,GACNkC,GAAG,QAAQ,SAASL,GACjBH,EACK7B,KAAK,MAAMgC,GAAKA,EAAES,IAClBzC,KAAK,MAAMgC,GAAKA,EAAEN,GAC3B,GAkBR,GACJ,CD1J2BmC,EAG3B,CAEAnB,E","sources":["webpack://js_project/./src/index.js","webpack://js_project/./src/scripts/data.js"],"sourcesContent":["import {bubbleUp, coinFetch} from \"./scripts/data\";\n// import Example from \"./scripts/example\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // console.log(\"Hello world!\")\n    // const main = document.getElementById(\"main\")\n    // new Example(main); \n\n})\n\nasync function call(){\n    // const json = await coinFetch();\n    const coinInfo = await bubbleUp(); \n    // console.log(coinInfo);\n    // console.log(typeof coinInfo);\n}\n\ncall(); ","export function bubbleUp(){\n\n    // set the dimensions and margins of the graph\n    const width = 960\n    const height = 500\n\n    // append the svg object to the body of the page\n    const svg = d3.select(\"#my_dataviz\")\n    .append(\"svg\")\n        .attr(\"id\", \"chart\")\n        .attr(\"viewBox\", \"0 0 960 500\") //dynamic width & height\n        .attr(\"preserveAspectRatio\", \"xMidYMid meet\") //dynamic width & height\n\n    // Read data\n    d3.json(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then( function(data) {\n        \n        // add change properties to each coin whether they are up or down based on price_change_percentage_24h\n        data.map((el) => {\n            if (el.price_change_percentage_24h > 0) {\n                el['change'] = \"up\"\n            } else {\n                el['change'] = 'down'\n            }\n        })\n\n        let downs = data.filter((el) => el.price_change_percentage_24h < 0)\n        let ups = data.filter((el) => el.price_change_percentage_24h > 0)\n        console.log(`${downs.length} downs `)\n        console.log(`${ups.length} ups `)\n        \n        //find the worst performing coin to use for size scaling\n        function bottom(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h > arr[i].price_change_percentage_24h){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n\n        //find the best performing coin to use for size scaling\n        function top(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h < arr[i].price_change_percentage_24h){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n\n        //compare bottom and top and use for size scaling\n        function max(){\n            if (Math.abs(bottom(downs).price_change_percentage_24h) > top(ups).price_change_percentage_24h){\n                return Math.abs(bottom(downs).price_change_percentage_24h);\n            } else {\n                return top(ups).price_change_percentage_24h;\n            }\n        }\n\n        console.log(bottom(downs))\n        console.log(top(ups))\n        \n\n        // Color palette for change up/ down\n        const color = d3.scaleOrdinal()\n            .domain([\"down\", \"up\"])\n            .range([\"red\", \"green\"]);\n\n        // Size scale for coin/bubbles based on top/worst performing coin\n        const size = d3.scaleLinear()\n            .domain([0, max()]) //added 10 to make it to appear within desire location\n            .range([7, 55])  // circle will be between 7 and 55 px wide\n\n        const y = d3.scaleOrdinal()\n            .domain([\"up\", \"down\"])\n            .range([10, 100])\n\n        //-------------------------------------\n        // create a tooltip\n        const Tooltip = d3.select(\"#my_dataviz\")\n            .append(\"div\")\n            .style(\"opacity\", 0)\n            .attr(\"class\", \"tooltip\")\n            .style(\"background-color\", \"white\")\n            .style(\"border\", \"solid\")\n            .style(\"border-width\", \"2px\")\n            .style(\"border-radius\", \"5px\")\n            .style(\"padding\", \"5px\")\n\n        // Three function that change the tooltip when user hover / move / leave a cell\n        const mouseover = function(event, d) {\n            Tooltip\n            .style(\"opacity\", 1)\n        }\n        const mousemove = function(event, d) {\n            Tooltip\n            .html('<u>' + d.name + '</u>' + \"<br>\" + d.price_change_percentage_24h.toFixed(2) + '%')\n            .style(\"left\", (event.x/2+20) + \"px\")\n            .style(\"top\", (event.y/2-30) + \"px\")\n        }\n        const mouseleave = function(event, d) {\n            Tooltip\n            .style(\"opacity\", 0)\n        }\n\n        // Initialize the circle: all located at the center of the svg area\n        var node = svg.append(\"g\")\n            .selectAll(\"circle\")\n            .data(data)\n            .join(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", d => size(Math.abs(d.price_change_percentage_24h)))\n            .attr(\"cx\", width / 2)\n            .attr(\"cy\", height / 2)\n            .html(\"yes\")\n            .style(\"fill\", d => color(d.change))\n            .style(\"fill-opacity\", 0.8)\n            .attr(\"stroke\", \"black\")\n            .style(\"stroke-width\", 2)\n            .on(\"mouseover\", mouseover) // What to do when hovered\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n            .call(d3.drag() // call specific function when circle is dragged\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));\n                \n        // Features of the forces applied to the nodes:\n        const simulation = d3.forceSimulation()\n            // .force(\"x\", d3.forceX().strength(0.5).x(d => x(d.change)))\n            // .force(\"y\", d3.forceY().strength(0.1).y( height / 2  ))\n            .force(\"x\", d3.forceX().strength(0.1).x( height / 2 ))\n            .force(\"y\", d3.forceY().strength(1).y( d => y(d.change) ))\n            .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n            .force(\"charge\", d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\n            .force(\"collide\", d3.forceCollide().strength(.2).radius(function(d){ return (size(Math.abs(d.price_change_percentage_24h))+7) }).iterations(1)) // Force that avoids circle overlapping\n\n        // Apply these forces to the nodes and update their positions.\n        // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n        simulation\n            .nodes(data)\n            .on(\"tick\", function(d){\n                node\n                    .attr(\"cx\", d => d.x)\n                    .attr(\"cy\", d => d.y)\n            });\n\n        // What happens when a circle is dragged?\n        function dragstarted(event, d) {\n            if (!event.active) simulation.alphaTarget(.03).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        function dragged(event, d) {\n            d.fx = event.x;\n            d.fy = event.y;\n        }\n        function dragended(event, d) {\n            if (!event.active) simulation.alphaTarget(.03);\n            d.fx = null;\n            d.fy = null;\n        }\n\n    })\n}\n\n\n"],"names":["document","addEventListener","async","svg","d3","select","append","attr","json","then","data","map","el","price_change_percentage_24h","downs","filter","ups","bottom","arr","result","i","length","top","console","log","color","scaleOrdinal","domain","range","size","scaleLinear","Math","abs","y","Tooltip","style","node","selectAll","join","d","width","height","html","change","on","event","name","toFixed","x","call","drag","active","simulation","alphaTarget","restart","fx","fy","forceSimulation","force","forceX","strength","forceY","forceCenter","forceManyBody","forceCollide","radius","iterations","nodes","bubbleUp"],"sourceRoot":""}