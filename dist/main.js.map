{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/index.js","webpack://js_project/./src/scripts/data.js"],"sourcesContent":["import {bubbleUp, coinFetch} from \"./scripts/data\";\nimport GetData from \"./scripts/getData\";\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n\n    \n// })\n\nasync function call(){\n    await bubbleUp(); \n}\n\ncall();\n\nwindow.reload = function() {\n    d3.selectAll('svg').remove();\n    d3.selectAll('.tooltip').remove();\n    call()\n}\n","export function bubbleUp(){\n\n    // set the dimensions and margins of the graph\n    const width = 900\n    const height = 400\n\n    // append the svg object to the body of the page\n    const svg = d3.select(\"#my_dataviz\")\n        .append(\"svg\")\n            .attr(\"id\", \"chart\")\n            .attr(\"viewBox\", \"0 -15 900 400\") //dynamic width & height\n            .attr(\"preserveAspectRatio\", \"xMidYMid meet\") //dynamic width & height\n            .style(\"border-radius\", \"5px\")\n\n    console.log(numCoins.value)\n        \n        // Read data\n        d3.json(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${parseInt(numCoins.value)}&page=1&sparkline=false`).then( function(data) {\n            \n            \n        // console.log(element.value)\n        // console.log(data.slice(0, parseInt(element.value)))\n        // data = data.slice(0, parseInt(element.value))\n\n        // add change properties to each coin whether they are up or down based on price_change_percentage_24h\n        data.map((el) => {\n            if (Math.abs(el.price_change_percentage_24h) > 100) {\n                el['change'] = 'crazy'\n            } else if (el.price_change_percentage_24h > 0 && el.price_change_percentage_24h < 100) {\n                el['change'] = 'up'\n            } else if (el.price_change_percentage_24h < 0) {\n                el['change'] = 'down'\n            } else if (el.price_change_percentage_24h === null) {\n                el['change'] = 'down'\n                el.price_change_percentage_24h = 0\n            }\n        })\n\n        data.map((el) => { //convert Market Cap to strings for coininfo\n            if (el.market_cap > 1000000000){\n                el['toolMC'] = `$${(el.market_cap/1000000000).toFixed(2)}B`\n            } else {\n                el['toolMC'] = `$${(el.market_cap/1000000).toFixed(2)}M`\n            }\n        })\n\n        data.map((el) => { //convert volume to strings for coininfo\n            if (el.total_volume > 1000000000){\n                el['toolTV'] = `$${(el.total_volume/1000000000).toFixed(2)}B`\n            } else {\n                el['toolTV'] = `$${(el.total_volume/1000000).toFixed(2)}M`\n            }\n        })\n\n        data.map((el) => { //convert % change to strings for coininfo\n            if (el.price_change_percentage_24h > 1){\n                el['toolPC'] = `+${(el.price_change_percentage_24h).toFixed(2)}%`\n            } else {\n                el['toolPC'] = `${(el.price_change_percentage_24h).toFixed(2)}%`\n            }\n        })\n\n        const formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n        })\n\n        console.log(data)\n        \n        // data.forEach(el => console.log(el.price_change_percentage_24h))\n\n        let downs = data.filter((el) => el.price_change_percentage_24h < 0) // find coins that are down\n        let ups = data.filter((el) => el.price_change_percentage_24h > 0) // find coins that are up\n        let crazys = data.filter((el) => el.change === 'crazy') // find coins that are up or down by over 100%\n        console.log(`${downs.length} downs `)\n        console.log(`${ups.length} ups `)\n        console.log(crazys)\n\n\n        \n        //find the worst performing coin to use for size scaling\n        function bottom(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h > arr[i].price_change_percentage_24h && arr[i].change !== 'crazy'){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n        \n        //find the best performing coin to use for size scaling\n        function top(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h < arr[i].price_change_percentage_24h && arr[i].change !== 'crazy'){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n\n        function topCrazys(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h < Math.abs(arr[i].price_change_percentage_24h)){\n                    result = arr[i]\n                }\n            }\n            return result.price_change_percentage_24h;\n        }\n        \n        function numBelowAvg(arr) {\n            let total = 0;\n            arr.forEach((el) => {\n                total += Math.abs(el.price_change_percentage_24h)\n            })\n            let avg = total / numCoins.value \n            let count = 0; \n            arr.forEach((el) => {\n                if (el.price_change_percentage_24h < avg) {\n                    count++; \n                }\n            })\n            return total; \n        }\n\n        console.log(numBelowAvg(data))\n\n        function sizeScale(arr) {\n            let total = {\n                \"small\": 0, \n                \"big\": 0,\n                \"crazy\": 0\n            };\n            arr.forEach((el) => {\n                if (Math.abs(el.price_change_percentage_24h) < 50){\n                    total[\"small\"] += 1; \n                } else if (Math.abs(el.price_change_percentage_24h) > 50 && Math.abs(el.price_change_percentage_24h) < 90){\n                    total[\"big\"] += 1;\n                } else if (Math.abs(el.price_change_percentage_24h) > 80){\n                    total[\"crazy\"] += 1;\n                } \n            })\n            console.log(total)\n            if (total[\"small\"] >= total[\"big\"]) {\n                return 11;\n            } else {\n                return 5; \n            }\n        }\n        // let bubbleSize = sizeScale(data)\n\n        console.log(sizeScale(data))\n\n        //compare bottom and top and use for size scaling\n        function max(){\n            if (Math.abs(bottom(downs).price_change_percentage_24h) > top(ups).price_change_percentage_24h){\n                return Math.abs(bottom(downs).price_change_percentage_24h);\n            } else {\n                return top(ups).price_change_percentage_24h;\n            }\n        }\n        \n        console.log(max())\n        console.log(bottom(downs))\n        console.log(top(ups))\n        \n        // const setA = {\n        //     size: [5, 60],\n        //     textAlign: [5, 50],\n        //     fontSize: [5, 15],\n        //     yCoor: [50, 200]\n        // }\n        \n        // Color palette for change up/ down\n        const color = d3.scaleOrdinal()\n            .domain([\"down\", \"up\"])//, \"crazy\"\n            .range([\"#fc0303\", \"#03fc2c\"]); // #046e22 , \"gold\"\n        \n        // Size scale for coin/bubbles based on top/worst performing coin\n        const size = d3.scaleLinear()\n            .domain([0, 50, max()]) //use max of up/down to scale bubble size , topCrazys(crazys)\n            .range([sizeScale(data), 55, 60])  // circle will be between 7 and 55 px wide , 80\n        \n        const textAlign = d3.scaleLinear()\n            .domain([0, 50, max()]) //use max of up/down to textAlignment px , topCrazys(crazys)\n            .range([5, 45, 50])  // alignment will be between 1 - 45 additional px , 70\n\n        const fontSize = d3.scaleLinear()\n            .domain([0, 50, max()]) //added 10 to make it to appear within desire location , topCrazys(crazys)\n            .range([5, 13, 15])  // circle will be between 7 and 55 px wide , 17\n\n        // How to stack bubbles if they are up/down\n        const y = d3.scaleOrdinal()\n            .domain([\"up\", \"down\"])\n            .range([50, 200])\n        \n        //-------------------------------------\n        // create a tooltip\n        const Tooltip = d3.select(\"#toolbox\")\n            .append(\"ul\")\n                .style(\"opacity\", 0)\n                .attr(\"class\", \"tooltip\")\n                .style(\"border-color\", \"white\")\n                .style(\"border\", \"solid\")\n                .style(\"border-width\", \"4px\")\n                .style(\"border-radius\", \"5px\")\n                .style(\"padding\", \"5px\")\n            \n            // Three function that change the tooltip when user hover / move / leave a cell\n\n        const Sample = d3.select(\"#toolbox\")\n            .append(\"p\")\n                .attr(\"class\", \"direction\")\n                .html(\"Hover mouse over bubble for more coin information. Click and drag to interact with bubbles.\")\n                .style(\"text-align\", \"center\")\n\n        const mouseover = function(event, d) {\n            Tooltip\n                .style(\"opacity\", 1)\n                d3.selectAll('.direction').remove();\n        }\n        const mousemove = function(event, d) {\n            Tooltip\n                .html(\n                    `&nbsp;&nbsp;&nbsp; Name: ${d.name} &nbsp;&nbsp;&nbsp;\n                    |&nbsp;&nbsp;&nbsp; Current Price: ${formatter.format(d.current_price)} &nbsp;&nbsp;&nbsp;`+\n                    '<br>' +\n                    `&nbsp;&nbsp;&nbsp;Symbol: ${d.symbol.toUpperCase()} &nbsp;&nbsp;&nbsp; \n                    |&nbsp;&nbsp;&nbsp;24Hr Change: ${d.toolPC} &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                    High 24Hr: ${formatter.format(d['high_24h'])} &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                    Low 24Hr: ${formatter.format(d['low_24h'])}`+ \n                    '<br>' + \n                    `Rank: ${d.market_cap_rank}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `Market Cap: ${d.toolMC}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `24H Volume: ${d.toolTV}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `ATH: ${formatter.format(d.ath)} on ${d.ath_date.slice(0,10)}&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;` +\n                    `ATL: ${formatter.format(d.atl)} on ${d.atl_date.slice(0,10)}`)\n                .style(\"left\", (event.x/2+20) + \"px\")\n                .style(\"top\", (event.y/2-30) + \"px\")\n                // .style(\"background-color\", d => color(d.change))\n        }\n        const mouseleave = function(event, d) {\n            Tooltip\n                .style(\"opacity\", 1)\n        }\n        \n        // Initialize the circle: all located at the center of the svg area\n        const node = svg.append(\"g\")\n            .selectAll(\"circle\")\n            .data(data)\n            .join(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", d => size(Math.abs(d.price_change_percentage_24h)))\n            .attr(\"cx\", width / 2)\n            .attr(\"cy\", height / 2)\n            .style(\"fill\", function(d) {return \"url(#\" + d.name.toLowerCase().replaceAll(\" \", \"-\") + \")\"})\n            .style(\"fill-opacity\", 1)\n            .attr(\"stroke\", d => color(d.change))\n            .style(\"stroke-width\", 1.5)\n            .on(\"mouseover\", mouseover) // What to do when hovered\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n            .call(d3.drag() // call specific function when circle is dragged\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended))\n            ;\n        \n        const text = svg.selectAll(null)\n            .data(data)\n            .enter()\n            .append(\"text\")\n            .text(d => {if (d.price_change_percentage_24h < 0) {\n                    return `${d.price_change_percentage_24h.toFixed(1)}%`\n                } else if (d.price_change_percentage_24h > 0) {\n                    return `+${d.price_change_percentage_24h.toFixed(1)}%`\n                } else {\n                    return \"0%\"\n                }\n            })\n            .attr('font-size', d => fontSize(Math.abs(d.price_change_percentage_24h)))\n            .attr('text-anchor', 'middle')\n\n        const icon = svg.selectAll(\"coinImage\")\n            .data(data)\n            .enter()\n            .append(\"pattern\")\n            .attr(\"class\", \"coinImage\")\n            .attr(\"id\", function(d) {return d.name.toLowerCase().replaceAll(\" \", \"-\")})\n            .attr(\"height\", \"100%\")\n            .attr(\"width\", \"100%\")\n            .attr(\"patternContentUnits\", \"objectBoundingBox\")\n            .append(\"image\")\n            .attr(\"height\", 1)\n            .attr(\"width\", 1)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", d => d.image)\n\n            let ticked = () => {\n                node.attr('cx', (data) => {\n                        return data.x\n                    })\n                    .attr('cy', (data) => {\n                        return data.y\n                    });\n            \n                text.attr('x', (data) => {\n                        return data.x\n                    })\n                    .attr('y', (data) => {\n                        return data.y + textAlign(Math.abs(data.price_change_percentage_24h))\n                    });\n            }\n\n        // Features of the forces applied to the nodes:\n        const simulation = d3.forceSimulation()\n            .force(\"x\", d3.forceX().strength(.1).x( height / 10 )) //strength of bubbles if move horizontally\n            .force(\"y\", d3.forceY().strength(.8).y( d => y(d.change) )) //strength of bubbles if move vertically, greens will float on top \n            .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n            .force(\"charge\", d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\n            .force(\"collide\", d3.forceCollide().strength(.2).radius(function(d){ return (size(Math.abs(d.price_change_percentage_24h)+3)) }).iterations(5)) // Force that avoids circle overlapping\n            \n        // Apply these forces to the nodes and update their positions.\n        // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n        simulation\n            .nodes(data)\n                .on(\"tick\", ticked);\n\n        // Drag Logic\n        function dragstarted(event, d) {\n            if (!event.active) simulation.alphaTarget(.03).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        function dragged(event, d) {\n            d.fx = event.x;\n            d.fy = event.y;\n        }\n        function dragended(event, d) {\n            if (!event.active) simulation.alphaTarget(.03);\n            d.fx = null;\n            d.fy = null;\n        }\n\n    })\n}\n\n\n"],"names":["async","call","svg","d3","select","append","attr","style","console","log","numCoins","value","json","parseInt","then","data","map","el","Math","abs","price_change_percentage_24h","market_cap","toFixed","total_volume","formatter","Intl","NumberFormat","currency","downs","filter","ups","crazys","change","bottom","arr","result","i","length","top","sizeScale","total","forEach","max","numBelowAvg","color","scaleOrdinal","domain","range","size","scaleLinear","textAlign","fontSize","y","Tooltip","node","html","selectAll","join","d","width","height","name","toLowerCase","replaceAll","on","event","remove","format","current_price","symbol","toUpperCase","toolPC","market_cap_rank","toolMC","toolTV","ath","ath_date","slice","atl","atl_date","x","drag","active","simulation","alphaTarget","restart","fx","fy","text","enter","image","forceSimulation","force","forceX","strength","forceY","forceCenter","forceManyBody","forceCollide","radius","iterations","nodes","ticked","bubbleUp","window","reload"],"sourceRoot":""}