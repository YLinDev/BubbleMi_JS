{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js_project/./src/index.js","webpack://js_project/./src/scripts/data.js"],"sourcesContent":["import {bubbleUp, coinFetch} from \"./scripts/data\";\nimport GetData from \"./scripts/getData\";\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n\n    \n// })\n\nasync function call(){\n    await bubbleUp(); \n}\n\ncall();\n\nwindow.reload = function() {\n    d3.selectAll('svg').remove();\n    d3.selectAll('.tooltip').remove();\n    call()\n}\n","export function bubbleUp(){\n\n    // set the dimensions and margins of the graph\n    const width = 900\n    const height = 400\n\n    // append the svg object to the body of the page\n    const svg = d3.select(\"#my_dataviz\")\n        .append(\"svg\")\n            .attr(\"id\", \"chart\")\n            .attr(\"viewBox\", \"0 0 900 400\") //dynamic width & height\n            .attr(\"preserveAspectRatio\", \"xMidYMid meet\") //dynamic width & height\n            .style(\"border-radius\", \"5px\")\n\n    console.log(numCoins.value)\n        \n        // Read data\n        d3.json(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${parseInt(numCoins.value)}&page=1&sparkline=false`).then( function(data) {\n            \n            \n        // console.log(element.value)\n        // console.log(data.slice(0, parseInt(element.value)))\n        // data = data.slice(0, parseInt(element.value))\n\n        // add change properties to each coin whether they are up or down based on price_change_percentage_24h\n        data.map((el) => {\n            if (Math.abs(el.price_change_percentage_24h) > 100) {\n                el['change'] = 'crazy'\n            } else if (el.price_change_percentage_24h > 0 && el.price_change_percentage_24h < 100) {\n                el['change'] = 'up'\n            } else if (el.price_change_percentage_24h < 0) {\n                el['change'] = 'down'\n            } else if (el.price_change_percentage_24h === null) {\n                el['change'] = 'down'\n                el.price_change_percentage_24h = 0\n            }\n        })\n\n        console.log(data)\n        \n        // data.forEach(el => console.log(el.price_change_percentage_24h))\n\n        let downs = data.filter((el) => el.price_change_percentage_24h < 0) // find coins that are down\n        let ups = data.filter((el) => el.price_change_percentage_24h > 0) // find coins that are up\n        let crazys = data.filter((el) => el.change === 'crazy') // find coins that are up or down by over 100%\n        console.log(`${downs.length} downs `)\n        console.log(`${ups.length} ups `)\n        console.log(crazys)\n\n\n        \n        //find the worst performing coin to use for size scaling\n        function bottom(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h > arr[i].price_change_percentage_24h && arr[i].change !== 'crazy'){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n        \n        //find the best performing coin to use for size scaling\n        function top(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h < arr[i].price_change_percentage_24h && arr[i].change !== 'crazy'){\n                    result = arr[i]\n                }\n            }\n            return result;\n        }\n\n        function topCrazys(arr) {\n            let result = {price_change_percentage_24h: 0}\n            for (let i = 0; i < arr.length; i++){\n                if (result.price_change_percentage_24h < Math.abs(arr[i].price_change_percentage_24h)){\n                    result = arr[i]\n                }\n            }\n            return result.price_change_percentage_24h;\n        }\n\n        //compare bottom and top and use for size scaling\n        function max(){\n            if (Math.abs(bottom(downs).price_change_percentage_24h) > top(ups).price_change_percentage_24h){\n                return Math.abs(bottom(downs).price_change_percentage_24h);\n            } else {\n                return top(ups).price_change_percentage_24h;\n            }\n        }\n        \n        console.log(max())\n        console.log(bottom(downs))\n        console.log(top(ups))\n        \n        const setA = {\n            size: [5, 60],\n            textAlign: [5, 50],\n            fontSize: [5, 15],\n            yCoor: [50, 200]\n        }\n        \n        // Color palette for change up/ down\n        const color = d3.scaleOrdinal()\n            .domain([\"down\", \"up\"])//, \"crazy\"\n            .range([\"#fc0303\", \"#03fc2c\"]); // #046e22 , \"gold\"\n        \n        // Size scale for coin/bubbles based on top/worst performing coin\n        const size = d3.scaleLinear()\n            .domain([0, max()]) //use max of up/down to scale bubble size , topCrazys(crazys)\n            .range([5, 60])  // circle will be between 7 and 55 px wide , 80\n        \n        const textAlign = d3.scaleLinear()\n            .domain([0, max()]) //use max of up/down to textAlignment px , topCrazys(crazys)\n            .range([5, 50])  // alignment will be between 1 - 45 additional px , 70\n\n        const fontSize = d3.scaleLinear()\n            .domain([0, max()]) //added 10 to make it to appear within desire location , topCrazys(crazys)\n            .range([5, 15])  // circle will be between 7 and 55 px wide , 17\n\n        // How to stack bubbles if they are up/down\n        const y = d3.scaleOrdinal()\n            .domain([\"up\", \"down\"])\n            .range([50, 200])\n        \n        //-------------------------------------\n        // create a tooltip\n        const Tooltip = d3.select(\"#my_dataviz\")\n            .append(\"div\")\n                .style(\"opacity\", 0)\n                .attr(\"class\", \"tooltip\")\n                // .style(\"background-color\", \"white\")\n                // .style(\"border\", \"solid\")\n                // .style(\"border-width\", \"2px\")\n                // .style(\"border-radius\", \"5px\")\n                // .style(\"padding\", \"5px\")\n            \n            // Three function that change the tooltip when user hover / move / leave a cell\n        const mouseover = function(event, d) {\n            Tooltip\n                .style(\"opacity\", 1)\n        }\n        const mousemove = function(event, d) {\n            Tooltip\n                .html('<u>' + d.name + '</u>' + \"<br>\" + d.price_change_percentage_24h.toFixed(1) + '%')\n                .style(\"left\", (event.x/2+20) + \"px\")\n                .style(\"top\", (event.y/2-30) + \"px\")\n        }\n        const mouseleave = function(event, d) {\n            Tooltip\n                .style(\"opacity\", 1)\n        }\n        \n        // Initialize the circle: all located at the center of the svg area\n        const node = svg.append(\"g\")\n            .selectAll(\"circle\")\n            .data(data)\n            .join(\"circle\")\n            .attr(\"class\", \"node\")\n            .attr(\"r\", d => size(Math.abs(d.price_change_percentage_24h)))\n            .attr(\"cx\", width / 2)\n            .attr(\"cy\", height / 2)\n            .style(\"fill\", function(d) {return \"url(#\" + d.name.toLowerCase().replaceAll(\" \", \"-\") + \")\"})\n            .style(\"fill-opacity\", 1)\n            .attr(\"stroke\", d => color(d.change))\n            .style(\"stroke-width\", 1.5)\n            .on(\"mouseover\", mouseover) // What to do when hovered\n            .on(\"mousemove\", mousemove)\n            .on(\"mouseleave\", mouseleave)\n            .call(d3.drag() // call specific function when circle is dragged\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended))\n            ;\n        \n        const text = svg.selectAll(null)\n            .data(data)\n            .enter()\n            .append(\"text\")\n            .text(d => {if (d.price_change_percentage_24h < 0) {\n                    return `${d.price_change_percentage_24h.toFixed(1)}%`\n                } else if (d.price_change_percentage_24h > 0) {\n                    return `+${d.price_change_percentage_24h.toFixed(1)}%`\n                } else {\n                    return \"0%\"\n                }\n            })\n            .attr('font-size', d => fontSize(Math.abs(d.price_change_percentage_24h)))\n            .attr('text-anchor', 'middle')\n\n        const icon = svg.selectAll(\"coinImage\")\n            .data(data)\n            .enter()\n            .append(\"pattern\")\n            .attr(\"class\", \"coinImage\")\n            .attr(\"id\", function(d) {return d.name.toLowerCase().replaceAll(\" \", \"-\")})\n            .attr(\"height\", \"100%\")\n            .attr(\"width\", \"100%\")\n            .attr(\"patternContentUnits\", \"objectBoundingBox\")\n            .append(\"image\")\n            .attr(\"height\", 1)\n            .attr(\"width\", 1)\n            .attr(\"preserveAspectRatio\", \"none\")\n            .attr(\"xlink:href\", d => d.image)\n\n            let ticked = () => {\n                node.attr('cx', (data) => {\n                        return data.x\n                    })\n                    .attr('cy', (data) => {\n                        return data.y\n                    });\n            \n                text.attr('x', (data) => {\n                        return data.x\n                    })\n                    .attr('y', (data) => {\n                        return data.y + textAlign(Math.abs(data.price_change_percentage_24h))\n                    });\n            }\n\n        // Features of the forces applied to the nodes:\n        const simulation = d3.forceSimulation()\n            .force(\"x\", d3.forceX().strength(.1).x( height / 10 )) //strength of bubbles if move horizontally\n            .force(\"y\", d3.forceY().strength(.8).y( d => y(d.change) )) //strength of bubbles if move vertically, greens will float on top \n            .force(\"center\", d3.forceCenter().x(width / 2).y(height / 2)) // Attraction to the center of the svg area\n            .force(\"charge\", d3.forceManyBody().strength(.1)) // Nodes are attracted one each other of value is > 0\n            .force(\"collide\", d3.forceCollide().strength(.2).radius(function(d){ return (size(Math.abs(d.price_change_percentage_24h)+3)) }).iterations(5)) // Force that avoids circle overlapping\n            \n        // Apply these forces to the nodes and update their positions.\n        // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\n        simulation\n            .nodes(data)\n                .on(\"tick\", ticked);\n\n        // Drag Logic\n        function dragstarted(event, d) {\n            if (!event.active) simulation.alphaTarget(.03).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n        function dragged(event, d) {\n            d.fx = event.x;\n            d.fy = event.y;\n        }\n        function dragended(event, d) {\n            if (!event.active) simulation.alphaTarget(.03);\n            d.fx = null;\n            d.fy = null;\n        }\n\n    })\n}\n\n\n"],"names":["async","call","svg","d3","select","append","attr","style","console","log","numCoins","value","json","parseInt","then","data","map","el","Math","abs","price_change_percentage_24h","downs","filter","ups","crazys","change","bottom","arr","result","i","length","top","max","color","scaleOrdinal","domain","range","size","scaleLinear","textAlign","fontSize","y","Tooltip","node","selectAll","join","d","width","height","name","toLowerCase","replaceAll","on","event","html","toFixed","x","drag","active","simulation","alphaTarget","restart","fx","fy","text","enter","image","forceSimulation","force","forceX","strength","forceY","forceCenter","forceManyBody","forceCollide","radius","iterations","nodes","ticked","bubbleUp","window","reload","remove"],"sourceRoot":""}